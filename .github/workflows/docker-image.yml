name: Build and Push Docker Image for demo-app-hello-world

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2
    - name: docker login
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ldsingh/demo-app-hello-world:latest --tag ldsingh/demo-app-hello-world:${GITHUB_RUN_ID}
    - name: Docker Push
      run: docker image push --all-tags ldsingh/demo-app-hello-world
      
    - name: Test AWS CLI  
      run: |
        aws s3 ls
        webserver_ip=`aws ec2 --region ap-southeast-2 describe-instances --filters "Name=tag:Name,Values=Webserver" --query 'Reservations[*].Instances[*].[PublicIpAddress]' --output text`
        aws s3 cp s3://terraform-state-bucket-ls-demo/myterrakey.pem myterrakey.pem
        chmod 400 myterrakey.pem
        echo ${webserver_ip}
        ssh -o StrictHostKeyChecking=no -i myterrakey.pem ubuntu@${webserver_ip} "docker ps"
        #ssh -o StrictHostKeyChecking=no -i myterrakey.pem ubuntu@${webserver_ip} "docker stop demo-webserver-app"
        #ssh -o StrictHostKeyChecking=no -i myterrakey.pem ubuntu@${webserver_ip} "docker rm demo-webserver-app"
        ssh -o StrictHostKeyChecking=no -i myterrakey.pem ubuntu@${webserver_ip} "docker run -d -p 3000:3000 --name demo-webserver-app ldsingh/demo-app-hello-world:${GITHUB_RUN_ID}"
        ssh -o StrictHostKeyChecking=no -i myterrakey.pem ubuntu@${webserver_ip} "docker ps"
        
      
